#!/bin/bash
#
# Wrapper for pacman:
#   - Asks for root permissions only when needed.
#   - Runs 'pacman -Syu' when parameters are not given.
#
# Author: manuel (see https://forum.endeavouros.com)

PacmanNoRoot() {
    # Try without root permissions first and save the error if any.
    local errfile=$(mktemp)
    LANG=C /usr/bin/pacman "$@" 2> "$errfile"
    errlog="$(/usr/bin/cat "$errfile")"
    /usr/bin/rm -f "$errfile"
}

Usage() {
    local progname="$(/usr/bin/basename "$0")"
    local pacman_help=$(LANG=C /usr/bin/pacman "$@" | sed -e "s|pacman |$progname |")
    cat <<EOF >&2
$progname is a pacman wrapper - asks root permissions only when needed.

$pacman_help
EOF
}

Options() {
    # Handle: 1) empty params, 2) options help, quiet and verbose
    local opt ix

    if [ -z "$1" ] ; then
        params="-Syu"
        return
    fi

    for opt in "$@" ; do
        case "$opt" in
            --help)    help=yes ;;
            --quiet)   verbose=no ;;
            --verbose) verbose=yes ;;
            --*) ;;
            -*)  for ix in $(seq 2 ${#opt}) ; do  # iterate option letters
                     case "${opt:ix-1:1}" in
                         h) help=yes ;;
                         q) verbose=no ;;
                         v) verbose=yes ;;
                     esac
                 done
                 ;;
        esac
    done
}

_pacman_wrapper() {
    local params="$*"   # use this with pacman command
    local verbose=yes
    local help=no
    local par
    local errlog
    local rooterr="error: you cannot perform this operation unless you are root."

    Options "$@"

    if [ "$verbose" = "yes" ] ; then
        echo "===> pacman $params" >&2
    fi
    if [ "$help" = "yes" ] ; then
        Usage "$@"
        exit 0
    fi

    PacmanNoRoot $params

    case "$errlog" in
        "$rooterr")
            # We need root permissions.
            /usr/bin/su -c "LANG=C /usr/bin/pacman $params && /usr/bin/sync"
            ;;
        "") # no error messages, so nothing more to do
            ;;
        *)  # some other error, show it
            echo "$errlog" >&2
            ;;
    esac
}

_pacman_wrapper "$@"
