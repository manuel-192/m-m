#!/bin/bash
#
# Wrapper for pacman with some new features.
# Use option --help to see more.
#
# Author: manuel (see https://forum.endeavouros.com)

CheckConnection() {
    if [ "$EOS_USE_CONNECTION_CHECK" = "yes" ] ; then
        /usr/bin/eos-connection-checker
        case "$?" in
            0) ;;
            *) echo "Internet connection is not available! Please check." >&2
               exit 1
               ;;
        esac
    fi
}

PacmanWrapper() {
    source /usr/share/endeavouros/scripts/eos-script-lib-yad || return 1
    source /etc/eos-pac.conf || return 1

    local sed=/usr/bin/sed
    local pacman=/usr/bin/pacman
    local checkupdates=/usr/bin/checkupdates
    local sync=/usr/bin/sync
    local yay=/usr/bin/yay
    local basename=/usr/bin/basename
    local cat=/usr/bin/cat
    local su=/usr/bin/su
    local opts_pacman="-Syu"
    local opts_yay="-Syu --nocombinedupgrade"

    case "$1" in
        "")
            CheckConnection  # check only here, this is the most used operation here
            $checkupdates && {
                echo "==> $(basename $pacman) $opts_pacman" >&2
                printf "Root "
                $su -c "$pacman $opts_pacman && $sync"
            }
            ;;
        *)
            local opt
            for opt in "$@" ; do
                case "$opt" in
                    --help)
                        local progname="$($basename "$0")"
                        local pacman_help=$(LANG=C $pacman "$@" | $sed -e "s|pacman |$progname |")
                        $cat <<EOF >&2
$progname is a pacman wrapper.

Changes/additions to pacman:
  - Asks root permissions only when needed.
  - If no parameters are given, runs 'pacman -Syu'.
  - New options:
      --aur | -a    Like with no parameters, but runs 'yay -Syu'.
                    If this option is used, other options and parameters will be ignored.

$pacman_help
EOF
                        return
                        ;;
                    --aur)
                        if [ -n "$($yay -Qua)" ] || ($checkupdates) ; then
                            echo "==> option $opt detected, ignoring other options and parameters." >&2
                            echo "==> $(basename $yay) $opts_yay" >&2
                            $yay $opts_yay && $sync
                        fi
                        return
                        ;;
                    --*) ;;
                    -*h*) $FUNCNAME --help "$@"; return ;;
                    -*a*) $FUNCNAME --aur ; return ;;
                esac
            done
            local rooterr="error: you cannot perform this operation unless you are root."
            local errfile=$(/usr/bin/mktemp)

            LANG=C $pacman "$@" 2> "$errfile"
            errlog="$($cat "$errfile")"
            /usr/bin/rm -f "$errfile"

            case "$errlog" in
                "$rooterr")
                    $EOS_ROOTER "LANG=C $pacman $* && $sync"
                    ;;
                "") ;;
                *)  echo "$errlog" >&2 ;;
            esac
            ;;
    esac
}

PacmanWrapper "$@"
