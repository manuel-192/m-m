#!/bin/bash
#
# Wrapper for pacman with some new features.
# Use option --help to see more.
#
# Author: manuel (see https://forum.endeavouros.com)

echo2() { echo "$@" >&2 ; }

DIE() {
    echo2 "$progname: error: $1"
    exit 1
}

CheckConnection() {
    if [ "$EOS_USE_CONNECTION_CHECK" = "yes" ] ; then
        /usr/bin/eos-connection-checker
        case "$?" in
            0) ;;
            *) DIE "Internet connection is not available! Please check." ;;
        esac
    fi
}

PacmanWrapper() {
    source /usr/share/endeavouros/scripts/eos-script-lib-yad || return 1
    source /etc/eos-pac.conf || return 1

    local awk=/usr/bin/awk
    local sed=/usr/bin/sed
    local pacman=/usr/bin/pacman
    local checkupdates=/usr/bin/checkupdates
    local column=/usr/bin/column
    local sync=/usr/bin/sync
    local yay=/usr/bin/yay
    local basename=/usr/bin/basename
    local cat=/usr/bin/cat
    local opts_pacman="-Syu"
    local opts_yay="-Syu --nocombinedupgrade"
    local updates
    local progname="$($basename "$0")"
    local nvidia_checker=/usr/bin/eos-kernel-nvidia-update-check

    case "$1" in
        "")
            CheckConnection  # check only here, this is the most used operation here
	    
            updates=$($checkupdates | $column -t)
	    if [ -n "$updates" ] ; then
		echo2 "$updates"
		echo2 ""
		$nvidia_checker "$(echo "$updates" | $awk '{print $1}')" || {
                    read -p "Stop upgrade (Y/n)? " >&2
                    case "$REPLY" in
                        "" | [Yy]*) exit 1 ;;
                    esac
                }
                echo2 "==> $($basename $pacman) $opts_pacman"
                $EOS_ROOTER "$pacman $opts_pacman && $sync"
            fi
            ;;
        *)
            local opt
            for opt in "$@" ; do
                case "$opt" in
                    --help)
                        local pacman_help=$(LANG=C $pacman "$@" | $sed -e "s|pacman |$progname |")
                        $cat <<EOF >&2
$progname is a pacman wrapper.

Changes/additions to pacman:
  - Asks root permissions only when needed.
  - If no parameters are given, installs updates only if available.
  - New options:
      --aur | -a    Like with no parameters, but checks also AUR updates.
                    If this option is used, other options and parameters will be ignored.

$pacman_help
EOF
                        return
                        ;;
                    --aur)
                        if [ -n "$($yay -Qua)" ] || ($checkupdates) ; then
                            echo2 "==> option $opt detected, ignoring other options and parameters."
                            echo2 "==> $($basename $yay) $opts_yay"
                            $yay $opts_yay && $sync
                        fi
                        return
                        ;;
                    --*) ;;
                    -*h*) $FUNCNAME --help "$@"; return ;;
                    -*a*) $FUNCNAME --aur ; return ;;
                esac
            done
            local rooterr="error: you cannot perform this operation unless you are root."
            local errfile=$(/usr/bin/mktemp)
            local errlog

            LANG=C $pacman "$@" 2> "$errfile"
            errlog="$($cat "$errfile")"
            /usr/bin/rm -f "$errfile"

            case "$errlog" in
                "$rooterr")
                    $EOS_ROOTER "LANG=C $pacman $* && $sync"
                    ;;
                "") ;;
                *)  echo2 "$errlog" ;;
            esac
            ;;
    esac
}

PacmanWrapper "$@"
