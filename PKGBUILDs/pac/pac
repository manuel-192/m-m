#!/bin/bash

# Wrapper for pacman. Knows when to have root permissions.
# Usage: pacmanwrapper [pacman-parameters]

_pac2()
{
    local rooterrorstring="error: you cannot perform this operation unless you are root."
    local log=$(mktemp)
    local pacman=/usr/bin/pacman
    local retpacman
    local xx sudo

    for xx in su-c_wrapper sudo ; do     # su-c_wrapper from EndeavourOS, the welcome app!
        if [ -x /usr/bin/$xx ] ; then
            sudo=$xx
            break
        fi
    done

    LANG=C $pacman "$@" >& $log
    retpacman=$?

    case "$retpacman" in
        0) cat $log ;;
        1)
            if [ "$(cat $log)" = "$rooterrorstring" ] ; then
                $sudo $pacman "$@"
            else
                cat $log
            fi
            ;;
        *) cat $log ; echo "Warning: pacman returned error code $retpacman." >&2 ;;
    esac
    rm -f $log
}

_GitHub_is_ok() {
    if [ -e /etc/pac-no-ghc.cnf ] ; then
        return 0
    fi
    local has_github_mirror=no

    if [ -n "$(grep "^Server = https://github.com/" /etc/pacman.conf)" ] ; then
        has_github_mirror=yes
    else
        local list
        for list in $(grep "^Include = /etc/pacman.d/" /etc/pacman.conf | uniq | awk '{print $NF}') ; do
            if [ -r "$list" ] ; then
                if [ -n "$(grep "^Server = " $list | head -n 2 | grep github)" ] ; then    # 2 is an ad hoc value...
                    has_github_mirror=yes
                fi
            else
                echo "Error: file '$list' does not exist. Check /etc/pacman.conf." >&2
            fi
        done
    fi

    if [ "$has_github_mirror" = "yes" ] ; then
        local url=https://github.com/endeavouros-team/repo-testing/releases/download/x86_64/endeavouros-testing-dev.db
        wget -q -O /dev/null $url
    fi
}

_pac1() {
    # workaround for github problems
    local opt=""
    local conf=""
    local check_github=yes
    local arg

    for arg in "$@" ; do
        case "$arg" in
            -U | -Q* | -R* | -Sc* | -V | -h | --help) check_github=no ; break ;;
        esac
    done

    if [ "$check_github" = "yes" ] ; then
        _GitHub_is_ok || {
            echo "GitHub has problems, using local db." >&2
            conf="$HOME/pacman.conf.tmp"
            rm -f "$conf"
            opt="--config '$conf'"
            cp /etc/pacman.conf "$conf"
            sed -i "$conf" \
                -e 's|^\(Server = https://github.com/.*\)$|#\1|' \
                -e 's|^\(Include = /etc/pacman.d/mirrorlist-m\)$|#\1|'
        }
    fi

    _pac2 $opt "$@"
}

_pac1 "$@"
