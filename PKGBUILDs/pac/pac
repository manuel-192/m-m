#!/bin/bash
#
# Wrapper for pacman with some new features.
# Use option --help to see more.
#
# Author: manuel (see https://forum.endeavouros.com)

PacInfo() { echo "Option $1 detected, ignoring other options and parameters." >&2 ; }

PacmanWrapper() {
    eos-connection-checker || {
        echo "Internet connection is not available! Please check." >&2
        return 1
    }
    case "$1" in
        "")
            checkupdates && { printf "Root "; su -c "pacman -Syu && sync"; }
            ;;
        -a | --aur)
            if [ -n "$(yay -Qua)" ] || (checkupdates) ; then
                yay -Syu --nocombinedupgrade && sync
            fi
            ;;
        -h | --help)
            local progname="$(basename "$0")"
            local pacman_help=$(LANG=C pacman "$@" | sed -e "s|pacman |$progname |")

            cat <<EOF >&2
$progname is a pacman wrapper.

Changes/additions to pacman:
  - Asks root permissions only when needed.
  - If no parameters are given, updates will be installed if available.
  - New options:
      --aur | -a    Like with no parameters, but checks also AUR updates.
                    If this option is used, other options and parameters will be ignored.

$pacman_help
EOF
            ;;
        *)
            local opt
            for opt in "$@" ; do
                case "$opt" in
                    --help)
                        $FUNCNAME --help "$@"; return ;;  # --help first prevents recursion here!
                    --aur)
                        PacInfo $opt; $FUNCNAME $opt; return ;;
                    --*) ;;
                    -h | -h* | -*h* | -*h)
                        $FUNCNAME -h "$@"; return ;;
                    -a | -a* | -*a* | -*a)
                        PacInfo -a; $FUNCNAME -a; return ;;
                esac
            done
            local rooterr="error: you cannot perform this operation unless you are root."
            local errfile=$(mktemp)

            LANG=C pacman "$@" 2> "$errfile"
            errlog="$(cat "$errfile")"
            rm -f "$errfile"

            case "$errlog" in
                "$rooterr") su -c "LANG=C pacman $* && sync" ;;
                "") ;;
                *)  echo "$errlog" >&2 ;;
            esac
            ;;
    esac
}

PacmanWrapper "$@"
