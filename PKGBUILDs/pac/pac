#!/bin/bash
#
# Wrapper for pacman with some new features.
# Use option --help to see more.
#
# Author: manuel (see https://forum.endeavouros.com)

echo2() { echo "$@" >&2 ; }

DIE() {
    echo2 "$progname: error: $1"
    exit 1
}

WaitForConnection() {
    local maxtime="$1"
    local check_interval="$2"
    [ -n "$maxtime" ]        || maxtime=15
    [ -n "$check_interval" ] || check_interval=1
    local checks=$((maxtime/check_interval + 1))
    local retval
    local xx=0

    while true ; do
        /usr/bin/eos-connection-checker
        retval=$?
        if [ $retval -eq 0 ] ; then
            return $retval
        fi
        if [ $((++xx)) -ge $checks ] ; then
            return $retval
        fi
        echo "$progname: waiting for connection ..."
        sleep $check_interval
    done
}

CheckConnection() {
    if [ "$EOS_USE_CONNECTION_CHECK" = "yes" ] ; then
        # Potentially give network drivers some time to prepare.
        WaitForConnection
        case "$?" in
            0) ;;
            *) DIE "Internet connection is not available! Please check." ;;
        esac
    fi
}

Help() {
    local args=()
    local arg

    # remove options unsupported by pacman
    for arg in "$@" ; do
        case "$arg" in
            --aur) ;;
            --*)  args+=("$arg") ;;
            -*a*) args+=("$(echo "$arg" | sed 's|a||g')") ;;
            *)    args+=("$arg") ;;
        esac
    done

    PacmanWrapper --help "${args[@]}"
    exit 0
}

NoUpdates() {
    echo2 "No updates."
}

PacmanOptions() {
    local opts

    opts="$(/usr/bin/getopt -q -o=Syu --longoptions sync,refresh,sysupgrade --name "$progname" -- "$@")" || {
        return 1
    }

    eval set -- "$opts"

    while true ; do
        case "$1" in
            -S | --sync)       o_sync=yes ;;
            -y | --refresh)    o_refresh=yes  ;;
            -u | --sysupgrade) o_sysupgrade=yes  ;;
            --) shift ; break ;;
        esac
        shift
    done
}

Pacman() {
    local keyring="LANG=C pacman -Sy --needed --noconfirm archlinux-keyring"
    local cmd

    if [ -z "$1" ] ; then
        cmd="$keyring && LANG=C pacman -Su && sync"
    else
        cmd="LANG=C pacman $* && sync"

        local o_sync=no o_refresh=no o_sysupgrade=no
        PacmanOptions "$@"
        [ "$o_sync $o_sysupgrade" = "yes yes" ] && cmd="$keyring && $cmd"
        
    fi
    echo "==> $cmd"
    $EOS_ROOTER "$cmd"
}

PacmanWrapper() {
    local basename=/usr/bin/basename
    local progname="$($basename "$0")"

    [ $(id -u) -eq 0 ] && DIE "please don't run this as root!"

    source /usr/share/endeavouros/scripts/eos-script-lib-yad || return 1
    source /etc/eos-pac.conf || return 1

    local awk=/usr/bin/awk
    local sed=/usr/bin/sed
    local pacman=/usr/bin/pacman
    local checkupdates=/usr/bin/checkupdates
    local column=/usr/bin/column
    local sync=/usr/bin/sync
    local yay=/usr/bin/yay
    local cat=/usr/bin/cat
    local opts_pacman="-Syu"
    local opts_yay="-Syu --nocombinedupgrade"
    local updates
    local nvidia_checker=/usr/bin/eos-kernel-nvidia-update-check

    case "$1" in
        "")
            CheckConnection
	    
            updates=$($checkupdates | $column -t)
	    if [ -n "$updates" ] ; then
		echo2 "$updates"
		echo2 ""
		$nvidia_checker "$(echo "$updates" | $awk '{print $1}')" || {
                    read -p "Stop upgrade (Y/n)? " >&2
                    case "$REPLY" in
                        "" | [Yy]*) exit 1 ;;
                    esac
                }
                Pacman
            else
                NoUpdates
            fi
            ;;
        *)
            local opt
            for opt in "$@" ; do
                case "$opt" in
                    --help)
                        local pacman_help=$(LANG=C pacman "$@" | $sed -e "s|pacman |$progname |")
                        $cat <<EOF >&2
$progname is a pacman wrapper.

Changes/additions to pacman:
  - Asks root permissions only when needed.
  - If no parameters are given, installs updates only if available.
  - New options:
      --aur, -a             Like with no parameters, but checks also AUR updates.
                            If this option is used, all other options and parameters
                            will be ignored.

      --limited-check, -L   A variant for update checking: check/update will be done only
                            once within an hour even if called more often.
                            This is designed to be useful when a terminal is started
                            often and $progname with this option is added to ~/.bashrc.

$pacman_help
EOF
                        return
                        ;;
                    --aur)
                        CheckConnection
                        if [ -n "$($yay -Qua)" ] || ($checkupdates) ; then
                            echo2 "==> option $opt detected, ignoring other options and parameters."
                            echo2 "==> $($basename $yay) $opts_yay"
                            $yay $opts_yay && $sync
                        else
                            NoUpdates
                        fi
                        return
                        ;;
                    --limited-check | -L)
                        CheckConnection
                        /usr/bin/TerminalUpdateCheck  # checks updates at most once per hour
                        return
                        ;;
                    --*) ;;
                    -*h*) Help "$@" ;;  # $FUNCNAME --help "$@"; return ;;
                    -*a*) $FUNCNAME --aur ; return ;;
                esac
            done
            local rooterr="error: you cannot perform this operation unless you are root."
            local errfile=$(/usr/bin/mktemp)
            local errlog
            local retval

            LANG=C pacman "$@" 2> "$errfile"
            retval=$?
            errlog="$($cat "$errfile")"
            /usr/bin/rm -f "$errfile"

            case "$errlog" in
                "$rooterr") Pacman "$@" ;;
                "")         return $retval ;;
                *)          echo2 "$errlog" ; return $retval ;;
            esac
            ;;
    esac
}

PacmanWrapper "$@"
