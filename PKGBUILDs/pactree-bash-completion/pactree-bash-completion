# bash completion for pactree        -*- shell-script -*-

_pactree_complete() {
    COMPREPLY=($(compgen -W "$1" -- "$cur"))
    case "$COMPREPLY" in
        --optional | -o) compopt -o nospace ;;  # special handling for these options!
    esac
    # [[ $COMPREPLY == *= ]] && compopt -o nospace
    compopt -o nosort
}

_pactree_options() {
    local opts=(
        -a -b -c -d -g -h -l -o -r -s -u -v
        --ascii      # -a
        --color      # -c
        --config
        --dbpath     # -b
        --debug
        --depth      # -d
        --gpgdir
        --graph      # -g
        --help       # -h
        --linear     # -l
        --optional   # -o
        --optional=  # -o
        --reverse    # -r
        --sync       # -s
        --unique     # -u
        --version    # -v
    )
    echo ${opts[*]}
}

_pactree_installed_pkgs() { pacman -Q | awk '{print $1}' ; }

_pactree_() {
    local cur prev #words cword split
    _init_completion -s || return

    # Handle options that need sub-options.
    # Each option "case" should return immediately.

    case "$prev" in
        --config | --gpgdir | --dbpath | -b)
            _filedir
            ;;
        --depth | -d)
            _pactree_complete "{0..10}"
            ;;
        --optional | -o)
            _pactree_complete "{-1..10}"
            ;;

        *)
            # Handle all top-level parameters.
            case "$cur" in
                "")
                    # Nothing yet.
                    _pactree_complete "$(_pactree_options; _pactree_installed_pkgs)"
                    ;;
                -*)
                    # Any option.
                    _pactree_complete "$(_pactree_options)"
                    ;;
                *)
                    # Non-option parameters.
                    _pactree_complete "$(_pactree_installed_pkgs)"
                    ;;
            esac
            ;;
    esac
} &&
complete -F _pactree_ pactree
