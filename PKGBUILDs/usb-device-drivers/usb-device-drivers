#!/bin/bash

# Detect drivers for USB devices, and possibly install them.
# Note: USB devices must be plugged in and powered on!
#
# Currently only one Brother printer is in the database.

echo2() { echo "$@" >&2 ; }
DIE() {
    echo2 "$progname: error: $1"
    exit 1
}

Install() {
    local device="${detected_devices[$1]}"
    shift
    local driver
    local repo
    local prompt
    local helper=yay
    local info
    local to_install=()
    local Device="Device: "
    local indent="        "  # use the length of $Device !

    which $helper >& /dev/null || helper=paru
    which $helper >& /dev/null || DIE "no AUR helper installed"

    printf "%s%s\n" "$Device" "$device" >&2

    for driver in "$@" ; do
        info="$(LANG=C $helper -Si "$driver")"
        if [ -n "$info" ] ; then
            if [ 1 -eq 1 ] && ( $(pacman -Q "$driver" >& /dev/null) ) ; then
                echo2 "${indent}driver: $driver [installed]"
            else
                repo="$(echo "$info" | grep ^Repository | awk '{print $NF}')"
                driver="$repo/$driver"
                to_install+=("$driver")
            fi
        else
            echo2 "${indent}driver: [unknown]"
        fi
    done
    [ -n "$to_install" ] && echo "===> $helper -S ${to_install[@]}"
}

DetectedDevices() {
    local usb_devices
    local line
    local id name
    local xx

    readarray -t usb_devices <<< $(lsusb)

    for line in "${usb_devices[@]}" ; do
        id=$(echo "$line" | cut -d' ' -f6)
        name=$(echo "$line" | cut -d' ' -f7-)

        # same device may be on different bus numbers...
        for xx in "${detected_ids[@]}" ; do
            if [ "$xx" = "$id" ] ; then
                break
            fi
        done
        if [ "$xx" != "$id" ] ; then
            detected_devices["$id"]="$name"
            detected_ids+=("$id")
        fi
    done
}

KnownDrivers() {
    local line id drivers
    local databasefile=/usr/share/endeavouros/scripts/usb-device-drivers-database.txt
    [ -r "$databasefile" ] || databasefile=./usb-device-drivers-database.txt
    [ -r "$databasefile" ] || DIE "$databasefile is missing"

    readarray -t usb_device_database <<< $(cat "$databasefile" | grep -Pv '^[ \t]*#.*$|^[ \t]*$')

    if [ -z "$usb_device_database" ] ; then
        DIE "Database of known drivers is empty!"
    fi

    for line in "${usb_device_database[@]}" ; do
        id=$(echo "$line" | awk '{print $1}')
        line=$(echo "$line" | sed "s|^[ \t]*$id[ \t]*||")  # remove id
        line=$(echo "$line" | sed "s|[ \t]*#.*||")         # remove trailing comment
        drivers="$line"
        known_drivers["$id"]="$drivers"
        known_ids+=("$id")
    done
}

Main()
{
    local progname=$(basename "$0")
    local line ix
    local device devicename
    local usb_device_database=()

    declare -A detected_devices
    declare -A known_drivers
    local detected_ids=()
    local known_ids=()

    KnownDrivers
    DetectedDevices

    local det_id kno_id found=no
    for kno_id in "${known_ids[@]}" ; do
        for det_id in "${detected_ids[@]}" ; do
            if [ "$det_id" = "$kno_id" ] ; then
                found=yes
                Install "$kno_id" ${known_drivers[$kno_id]}
            fi
        done
    done
    if [ "$found" = "no" ] ; then
        echo2 "Sorry, no known drivers found for detected devices."
    fi
}

Main "$@"
