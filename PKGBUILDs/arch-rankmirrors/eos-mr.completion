# bash completion for eos-mr        -*- shell-script -*-

_eos-mr_listselector()
{
    local cur="$1"
    local list_elems_all="$2"

    local realcur="${cur##*,}"
    local prefix="${cur%$realcur}"
    local elems word

    for word in $list_elems_all
    do
        if ! [[ $prefix == *"$word"* ]]; then
            elems="$word $elems"
        fi
    done
    COMPREPLY=( $(compgen -P "$prefix" -W "$elems" -S ',' -- $realcur) )
    compopt -o nospace
}


_eos-mr_complete() {
    COMPREPLY=( $(compgen -W "$1" -- "$cur") )
    [[ $COMPREPLY == *= ]] && compopt -o nospace
    compopt -o nosort
}

_eos-mr_() 
{
    local cur prev #words cword split
    _init_completion -s || return

    local completion_files=($(eos-mr --dump-completion-files))

    local -r dir="${completion_files[0]}"
    local -r timefile="${completion_files[1]}"
    local -r countrycodes="${completion_files[2]}"
    local -r countrynames="${completion_files[3]}"
    local -r optionsfile="${completion_files[4]}"
    local -r continents=(${completion_files[5]//,/ } )
    local -r now=$(date +%j)
    local prevtime=""

    mkdir -p "$dir"

    [ -e "$timefile" ] && prevtime=$(< "$timefile")
    if [ "$now" != "$prevtime" ] ; then
        echo "$now" > "$timefile"
        eos-mr --list-country-codes > "$countrycodes"
        eos-mr --list-country-names > "$countrynames"
        eos-mr --dump-options       > "$optionsfile"
    fi
    local options=$(< "$optionsfile")
    case "$prev" in
        -d | --distro)   _eos-mr_complete "arch" ;;
        -c | --country)  _eos-mr_listselector "$cur" "$(< "$countrycodes")" ;;
        --show-continent-countrycodes | --show-continent-countrynames) _eos-mr_complete "${continents[*]}" ;;
        *)               _eos-mr_complete "$options" ;;
    esac
}
complete -F _eos-mr_    eos-mr
