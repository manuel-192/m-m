#!/bin/bash

# Select and install pacman packages.

printf2()    { printf "$@" >&2 ; }
MSG()        { printf2 "$@" ; }

_columnize() { column -t -s'|' | sed 's|[ ]*$||' ; }

_fzf() {
    local prompt="$1"
    local fzf=(
        fzf
        --header="Navigation: Up, Down, PgUp, PgDn. TAB=select, ESC=quit, ENTER=accept"
        --prompt="Select package(s) by search word(s): "
        --marker=">>"
        --info=inline
        --exact
        -i
        --multi --layout=reverse --no-sort
    )
    local out=$(_columnize | sort | "${fzf[@]}" | awk '{print $1}')
    if [ -n "$out" ] ; then
        [ -n "$prompt" ] || prompt="Selected:"
        printf2 "$prompt\n"
        printf "%s\n" "$out" | sed 's|^|    |' >&2
        echo "$out"
    fi
}

_SelectPackagesNotInstalled() {
    local prompt="$1"
    local installed=$(mktemp)
    chmod go-rwx $installed

    expac -Q '%n' | sed 's|^|^|' > $installed                        # for ignoring already installed packages
    expac -S '%n|%d' | grep -v -f $installed | _fzf "$prompt"

    rm -f $installed
}

_SelectPackagesInstalled() {
    local prompt="$1"
    expac -Q '%n|%d' | _fzf "$prompt"
}

Install() {
    local pkgs=$(_SelectPackagesNotInstalled "To be installed:")

    if [ -n "$pkgs" ] ; then
        sudo pacman -S --needed $pkgs
    else
        MSG "Nothing to do.\n"
    fi
}

Remove() {
    local pkgs=$(_SelectPackagesInstalled "To be removed:")

    if [ -n "$pkgs" ] ; then
        sudo pacman -Rs $pkgs
    else
        MSG "Nothing to do.\n"
    fi
}

Update() { pacman-ext --no-banner -Syu ; }

Options() {
    local opts

    opts="$(/usr/bin/getopt -o=hiru --longoptions help,install,remove,update --name "$progname" -- "$@")" || {
        Options -h
        return 1
    }

    eval set -- "$opts"

    while true ; do
        case "$1" in
            -i | --install) op=Install ;;
            -r | --remove)  op=Remove ;;
            -u | --update)  op=Update ;;

            -h | --help) Usage ; exit 0 ;;
            
            --) shift ; break ;;
        esac
        shift
    done
    if [ -z "$op" ] ; then
        Usage
        op=Update
    fi
}

Usage() {
    cat <<EOF >&2
Usage: $progname [option]
Options:
  -i, --install         Install package(s).
  -r, --remove          Remove package(s).
  -u, --update          Update package(s). Default without an option.
  -h, --help            This help.
EOF
}

Main() {
    local progname="$(/usr/bin/basename "$0")"
    local op=""

    Options "$@"

    $op
}

Main "$@"
