#!/bin/bash

echo2()   { echo -e "$@" >&2; }
warning() { echo2 "$progname: $FUNCNAME: $1" ; }
error()   { echo2 "$progname: $FUNCNAME: $1" ; exit 1; }

BuildRepo() {
    local reponame="$1"
    [ $aur_src = local ] && fetch-aur-stuff $reponame
    assets.make ${options[*]}
}
export -f BuildRepo

Banner() {
    local tool="$1"
    local extra="$2"
    local line="${tool%% *}"
    [ "$extra" ] && line+=" $extra"
    Color info
    printf "======== %s ========\n" "$line" >&2
    Color
    $tool $extra
}
BannerIf() {
    local -r tool="$1"
    type "${tool%% *}" &>/dev/null && Banner "$tool"
}
Bannered() {
    local -r dir="$1"
    local -r tool="$2"
    local -r extra="$3"
    cd "$dir"
    Banner $tool $extra
    cd "$curdir"
}

AurSource() {
    # Use AUR if possible, otherwise use local copies from the backup repo.
    local -n _refvar="$1"
    /bin/curl --fail-early -Lsm 5 https://aur.archlinux.org >/dev/null  &&  _refvar=aur  ||  _refvar=local
}

assets_make() {
    local progname=${0##*/}
    local known_reponames_eos=(endeavouros endeavouros-testing-dev)
    local known_reponames_m=(m-aur2 m-more2 m-m)
    #local known_othernames=(MAN EOS local-repo)
    local reponame
    local curdir="$PWD"
    local options=(--fetch-timeout=120)
    local reponames_given=()
    local arg
    local buildmode="--dryrun"
    local aur_src

    AurSource aur_src

    [ "$CODEDIR" ] || error "CODEDIR is not set"

    for arg in "$@" ; do
        case "$arg" in
            -b | --build)                                     buildmode="" ;;
            -n | -nl | -nn | -nr | --dryrun | --dryrun-local) buildmode="$arg" ;;
            --aursrc=*) aur_src=${arg#*=}; options+=("$arg") ;;
            -*) options+=("$arg") ;;
            *)  reponames_given+=("$arg") ;;
        esac
    done
    [ "$reponames_given" ] || error "give reponame(s)"
    [ "$buildmode" ] && options+=("${buildmode}")

    for reponame in "${reponames_given[@]}" ; do
        if printf "%s\n" "${known_reponames_eos[@]}" | grep "^$reponame$" >/dev/null ; then
            Bannered "$CODEDIR/EOS/_BUILD_/$reponame" BuildRepo $reponame
        elif printf "%s\n" "${known_reponames_m[@]}" | grep "^$reponame$" >/dev/null ; then
            Bannered "$CODEDIR/MAN/_BUILD_/$reponame" BuildRepo $reponame
        else
            case "$reponame" in
                MAN | EOS)
                    case "$reponame" in
                        MAN) BannerIf cookbook
                             BannerIf arch-audit
                             [ -x /bin/gh ] && BannerIf "pull-requests -m"
                             ;;
                        EOS) [ -x /bin/gh ] && BannerIf "pull-requests -e"
                             ;;
                    esac
                    Bannered "$CODEDIR/$reponame" UpdateSources "$reponame"
                    ;;
                local-repo)
                    BannerIf local-repo-manager
                    ;;
                *)
                    warning "'$reponame' is not a known repo/src name"
                    ;;
            esac
        fi
    done
}

assets_make "$@"
