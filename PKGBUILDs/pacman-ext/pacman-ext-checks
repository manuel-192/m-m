#!/bin/bash

# Check all available updates for
# - updating keyrings first
# - nvidia & kernel update in sync (if problems, fail)
# - updated package descriptions

_nvidia_check_needed() {
    if lspci -k | grep -P "Display|VGA|3D" | grep -w NVIDIA >/dev/null ; then
        #pacman -Qq | grep -P '^nvidia$|^nvidia-lts$' > /dev/null
        expac -Q %n nvidia nvidia-lts >/dev/null
    fi
}
_nvidia_check() {
    if _nvidia_check_needed ; then
        echo :: Nvidia check...
        eos-kernel-nvidia-update-check $updates       # when this line will be executed, pacman -Sy was just done
    else
        true
    fi
}
_package_checks() {
    # Assumptions:
    #  - 'pacman -Sy' was executed immediately before calling this function
    #  - 'pacman -Su' was NOT executed yet

    local nvidia=no
    local descriptions=no
    local pkgs=()

    while [ -n "$1" ] ; do
        case "$1" in
            --nvidia) nvidia=yes ;;                 # do nvidia check
            --descriptions) descriptions=yes ;;
            -*) ;;
            *) pkgs+=("$1") ;;
        esac
        shift
    done

    local updates="$(pacman -Quq)"     # get possible updates
    local install=() pkg

    if [ -z "$updates" ] ; then
        return                         # no updates available, so carry on
    fi

    if [ "$nvidia" = "yes" ] ; then
        if ! _nvidia_check ; then
            read -p "    Continue anyway (y/N)? " >&2
            case "$REPLY" in
                [yY]*) ;;
                *) return 1 ;;                   # nvidia check failed...
            esac
        fi
    fi
    if [ "$descriptions" = "yes" ] ; then
        hook-update-description
    fi

    # Parameters are package(s) that should be installed before others.
    # Very likely they are keyring package(s) for Arch and/or EndeavourOS,

    for pkg in "${pkgs[@]}" ; do
        if [ -n "$(echo "$updates" | grep "^$pkg$")" ] ; then
            install+=("$pkg")
        fi
    done

    if [ ${#install[@]} -ne 0 ] ; then
        pacman -S --noconfirm "${install[@]}"
    fi
}

_package_checks "$@"
