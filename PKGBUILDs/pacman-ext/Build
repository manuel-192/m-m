#!/bin/bash

DIE() {
    local progname="$(basename "$0")"
    echo "$progname: error:" "$@" >&2
    exit 1
}

_Build_pkgname-pkgver-pkgrel() {
    source PKGBUILD
    echo "$pkgname"-"$pkgver"-"$pkgrel"
}

Build() {
    [ -r PKGBUILD ] || DIE "PKGBUILD not found."

    local makepkgopt="$*"
    local pkgname="$(_Build_pkgname-pkgver-pkgrel)"
    ls ${pkgname}-*.pkg.tar.zst >& /dev/null && rm -i ${pkgname}-*.pkg.tar.zst

    case "$pkgname" in
        eos-apps-info-*) ./eos-apps-info-collect ;;  # update actual html pages before build
    esac

    updpkgsums || DIE "updpkgsums failed."
    makepkg -cf $makepkgopt || DIE "makepkg failed."

    local file=$(ls ${pkgname}-*.pkg.tar.zst)
    if [ -r "$file" ] ; then
        echo "Install $file:"
        sudo pacman -U "$file"
        read -p "Delete $file (Y/n)? "
        case "$REPLY" in
            "" | [yY]*) rm -f $file ;;
        esac
    fi
    [ -x ./.destructor ] && ./.destructor   # user file .destructor can do post-build stuff, e.g. cleanup
}

Build "$@"
