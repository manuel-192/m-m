#!/bin/bash

DIE() {
    echo "$progname: error: $1" >&2
    exit 1
}

Main() {
    local data
    local files=()
    local dates=()
    local sizes=()
    local ix count
    local HELLO=""
    local URLBASE=""
    local ACCOUNT=""
    local PASSWORD=""
    local APP="curl"

    source $HOME/.config/fetch-iso.conf || return 1

    if [ -z "$HELLO" ] ; then
        if [ "$ACCOUNT$PASSWORD" ] ; then
            HELLO="$ACCOUNT:$PASSWORD"
        else
            DIE "no account/password"
        fi
    fi

    case "$APP" in
        curl) data=$(/bin/curl --fail -Lsm 30 -o- -u "$HELLO" "$URLBASE")                      || DIE "failed fetching the info page '$URLBASE'." ;;
        wget) data=$(/bin/wget -qO - --user "${HELLO%:*}" --password "${HELLO#*:}" "$URLBASE") || DIE "failed fetching the info page '$URLBASE'." ;;
    esac
    data=$(echo "$data" | grep '"indexcolsize">[0-9]')
    count=$(echo "$data" | wc -l)

    readarray -t files <<< $(echo "$data" | sed -E 's|.*"indexcolname"><a href="([^"]+)".*|\1|g')
    readarray -t dates <<< $(echo "$data" | sed -E 's|.*"indexcollastmod">([0-9-]+ [0-9:]+)[ ]*<.*|\1|g')
    readarray -t sizes <<< $(echo "$data" | sed -E 's|.*"indexcolsize">([0-9\.A-Z]+)[ ]*<.*|\1|g')

    for ((ix=0; ix<count; ix++)) ; do
        echo "${files[$ix]}|${dates[$ix]}|${sizes[$ix]}"
    done | column -t -s"|" | sort -k2 -k3
}

Main "$@"
