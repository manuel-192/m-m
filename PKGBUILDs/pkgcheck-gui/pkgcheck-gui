#!/bin/bash

_echo2()  { echo "$@" >&2 ; }
_DIE()    { _echo2 "$progname: error: $@" ; exit 1 ; }
_ASSERT() { "$@" || _DIE "$@" failed ; }

TFH_Pkgcheck() {                 # TFH = Tab Function Helper
    local -r mode="$1"
    local -r repo="$2"
    local opt=""
    local WAIT_AT_END=60

    _ASSERT source /etc/pkgcheck-gui.conf

    [ -n "$WAIT_AT_END" ] || _DIE "WAIT_AT_END value is empty"

    case "$mode" in
        Check)            opt="--dryrun-local" ;;
        Check+fetch)      opt="--dryrun" ;;
        Build)            opt="--build" ;;
        *)                return 1 ;;
    esac
    case "$repo" in
        local-repo) RunInTerminalOpt --wait sleep=$WAIT_AT_END -- pkgcheck $repo $opt ;;
        *)          RunInTerminalOpt --wait sleep=$WAIT_AT_END -- pkgcheck $repo $opt ;;
    esac
}

# export local functions used (in)directly in yad
export -f _echo2 _DIE _ASSERT
export -f TFH_Pkgcheck

TABFUNC_package_maintenance() {
    local tabnum="$1"
    local mode=""
    local tips2="Build all changed packages"
    declare -A tips

    tips[Check]="Check if any package needs to be rebuilt, but compare only with local packages."
    tips[Check+fetch]="Same as CHECK, but fetch packages to compare from github first."
    tips[Build]="Build all changed packages, but fetch current packages from github first."

    local tabcontents=(
        eos_yad --plug="$handle" --tabnum="$tabnum"
        --form --image=endeavouros-icon --use-interp --align-buttons --columns=3
        --title="Manage package building"
        --text="Managing EndeavourOS and other repos.\nClick a repo button from the column you want."
    )
    for mode in Check Check+fetch Build ; do
        tabcontents+=(
            --field="  <b>$mode</b>!${tips[$mode]}":lbl ""
            --field="endeavouros":fbtn             "TFH_Pkgcheck $mode endeavouros"
            --field="endeavouros-testing-dev":fbtn "TFH_Pkgcheck $mode endeavouros-testing-dev"
            --field="m-m":fbtn                     "TFH_Pkgcheck $mode m-m"
            --field="m-more2":fbtn                 "TFH_Pkgcheck $mode m-more2"
            --field="m-aur":fbtn                   "TFH_Pkgcheck $mode m-aur"

            --field="local-repo!!$tips2":fbtn      "TFH_Pkgcheck $mode local-repo"   # mode not actually used
        )
    done

    "${tabcontents[@]}" >& /dev/null &
}

TABFUNC_package_maintenance_extras() {
    local tabnum="$1"
    local tabcontents=(
        eos_yad --plug="$handle" --tabnum="$tabnum"
        --form --image=endeavouros-icon --use-interp --align-buttons --columns=2
        --title="Package maintenance extras"
        --text="Additional package maintenance"
        --field="Check master mirror!dialog-info!Check if the master mirror is up to date":fbtn "RunInTerminalOpt --wait sleep=$WAIT_AT_END -- 'mirrorcheck $BUILT_REPO_DIR'"
        --field="Pull requests!dialog-info!Show some EOS pull requests":fbtn       "RunInTerminalOpt --wait sleep=$WAIT_AT_END -- pull-requests"
        --field="EndeavourOS Forum!web-browser!Log in to the EndeavourOS Forum":fbtn     "BrowsePage login"
        --field="Browse PKGBUILDS!web-browser!Browse the PKGBUILDS page":fbtn "BrowsePage pkgbuilds"
    )
    "${tabcontents[@]}" >& /dev/null &
}

TABFUNC_system_maintenance() {
    local tabnum="$1"
    local tabcontents=(
        eos_yad --plug="$handle" --tabnum="$tabnum"
        --form --image=endeavouros-icon --use-interp --align-buttons --columns=2
        --title="System maintenance"
        --text="System maintenance tasks"

        --field="Check system update!package-manager-icon!If updates are available, update all packages in the system":fbtn
          "RunInTerminalOpt --wait sleep=$WAIT_AT_END -- 'pacman-ext --extras --no-banner --expac'"

        --field="Update system!package-manager-icon!Update all packages in the system":fbtn
          "RunInTerminalOpt --wait sleep=$WAIT_AT_END -- paf"

        --field="Install packages!package-manager-icon!Install packages in the system":fbtn
          "RunInTerminalOpt --wait sleep=$WAIT_AT_END -- paf -i"
        --field="Remove packages!package-manager-icon!Remove packages from the system":fbtn
          "RunInTerminalOpt --wait sleep=$WAIT_AT_END -- paf -r"
    )
    "${tabcontents[@]}" >& /dev/null &
}

NotebookCreate() {
    local tabnames=(                      # use the same order as in $funcnames
        "Package maintenance"
        "Package maintenance extras"
        "System maintenance"
    )
    local funcnames=(                     # use the same order as in $tabnames
        TABFUNC_package_maintenance
        TABFUNC_package_maintenance_extras
        TABFUNC_system_maintenance
    )
    local ix
    local handle=$(shuf -i 700000-999999 -n 1)

    notebook=(
        eos_yad --notebook --key="$handle" --title="General management" --use-interp --expand --no-buttons
        $( [ -n "$PKGCHECK_GUI_GEOM" ] && echo "--geometry=$PKGCHECK_GUI_GEOM" )
    )


    for ((ix=0; ix < ${#funcnames[@]}; ix++)) ; do
        ${funcnames[$ix]} $((ix + 1))
        notebook+=(--tab="${tabnames[$ix]}")
    done
}

Main() {
    local -r progname="$(basename "$0")"
    local PKGCHECK_GUI_GEOM=""
    local WAIT_AT_END=60
    local BUILT_REPO_DIR=""

    _ASSERT source /usr/share/endeavouros/scripts/eos-script-lib-yad
    _ASSERT source /etc/pkgcheck-gui.conf

    # notebook stuff
    local notebook

    NotebookCreate

    "${notebook[@]}" 2>/dev/null
}

Main "$@"
