#!/bin/bash

# Show man page from (Arch) web.
# Additionally show info from names that have no man page.

echo2() { echo "$@" >&2 ; }

Usage() {
    local progname="$(basename "$0")"
    cat <<EOF >&2
Usage: $progname [basic-options] name
       $progname help-options

Name:
    The name for which the manual page or other info is searched.

Basic-options:
    --find-other-info   Find other info if man page doesn't exist.
    --skip-other-info   Don't find other info if man page doesn't exist (default).

Help-options:
    -h | --help              This help.

Config file webman.conf is searched from the following folders in this order:
    ~/.config/webman
    /etc/webman
Config file may contain variables:
    WEBMAN_BROWSER=<name-of-web-browser>

Web page infos can be written info folder 'pageinfo' under a config file folder (see above).
Web page info files can be:
    <name>.url          Contains one URL to the <name> info page.
    <name>.helpcmd      Contains a command to show help for <name>.

EOF
}

Manweb()
{
    local name=""
    local find_other_info=no   # default: will not find other web info if $name has no man page

    local folders=(
        $HOME/.config/webman
        /etc/webman
    )
    local section
    local url=""
    local br_default="/usr/bin/xdg-open"
    local br="$br_default"
    local WEBMAN_BROWSER=""
    local pageinfo_folder="pageinfo"   # under any of $folders
    local arg dir

    # Handle paramaters
    for arg in "$@" ; do
        case "$arg" in
            -h | --help)
                Usage
                return
                ;;
            --find-other-info)
                find_other_info=yes
                ;;
            --skip-other-info)
                find_other_info=no
                ;;
            -* )
                echo "Sorry, option '$arg' is not supported."; return 1
                ;;
            *)
                name="$arg"
                ;;
        esac
    done

    if [ -z "$name" ] ; then
        echo2 "Error: give command name"
        return 1
    fi

    # Get configured values
    for folder in "${folders[@]}" ; do
        if [ -r $folder/webman.conf ] ; then
            source $folder/webman.conf 2>/dev/null && {
                if [ -n "$WEBMAN_BROWSER" ]; then
                    br="$WEBMAN_BROWSER"
                fi
            }
            break
        fi
    done

    if [ -z "$(which "$br" 2>/dev/null)" ]; then
        echo2 "Browser '$br' not found, using default $br_default."
        br="$br_default"
    fi

    # Find the section of the man page
    section=$(/usr/bin/man -w "$name" 2>/dev/null | /usr/bin/cut -d '.' -f2)

    # If section was found, show the man page from the Arch site.
    # Otherwise look for other places if allowed.

    if [ -n "$section" ] ; then
        url="https://man.archlinux.org/man/$name.$section"
    else
        #echo2 "Man page for '$name' was not found."
        if [ "$find_other_info" = "no" ] ; then
            echo2 "Consider using option --find-other-info"
            return 1
        fi

        #echo2 "Finding other info from the web..."

        for folder in "${folders[@]}" ; do
            dir="$folder/pageinfo"
            if [ -r "$dir/$name.url" ] ; then
                url=$(cat "$dir/$name.url")
                echo2 "==> '$url'"
                break
            elif [ -x "$dir/$name.helpcmd" ] ; then
                "$dir/$name.helpcmd"
                return
            fi
        done
    fi

    if [ -n "$url" ] ; then
        /usr/bin/setsid $br "$url" 2>/dev/null &
    else
        eos-pkginfo "$name" && return
        echo2 "Sorry, no info found."
    fi
}

Manweb "$@"
