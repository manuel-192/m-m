#!/bin/bash

# Use database to set the correct Ethernet driver.

echo2()   { echo "$@" >&2 ; }
printf2() { printf "$@" >&2 ; }
DIE()     { echo2 "$progname: error: $1"; exit 1; }

debug()   { [ "$debug" = "yes" ] && echo2 "$@" ; }

GetId()     { echo "$lspci" | sed -n "/$devstring/,/^$/p" | grep -w "$devstring" | sed 's|.*\[\([0-9a-f:]*\)\].*|\1|' ; }
GetDriver() { echo "$lspci" | sed -n "/$devstring/,/^$/p" | grep 'Kernel driver in use' | awk '{print $NF}' ; }
FindCard()  { echo "$lspci" | sed -n "/$devstring/,/^$/p" | grep -w "$devstring" ; }

Options() {
    local opts
    opts="$(getopt -o=dsh --longoptions check,debug,display,help,save,sendlog --name "$progname" -- "$@")" || exit 1

    eval set -- "$opts"

    while true ; do
        case "$1" in
            -h | --help)
                cat <<EOF
Usage: $progname [options]
Options:
    --save    -s   Store your card and *working* driver info temporarily for --sendlog.
    --sendlog      Send the stored temporary info to internet using eos-sendlog.
    --display -d   Display the known good driver name from the local system database.
    --help    -h   Show this help and exit.

Detected values:
    Ethernet card id:        $id
    Ethernet card driver:    $driver

Database files:
    System database file:    $database_sys
    Temporary database file: $database_tmp
EOF
                exit 0
                ;;
            -s | --save) mode=save ;;
            -d | --display) mode=display ;;
            --sendlog) mode=sendlog ;;

            # "hidden" options:
            --debug) debug=yes ;;
            --check) mode=check ;;

            --) shift ; break ;;
        esac
        shift
    done
    [ -n "$1" ] && devstring="$1"
}

Main()
{
    local progname="$(basename "$0")"

    # Options may modify these variables:
    local mode=display  # save or display
    local devstring="Ethernet controller"  # device search string
    local debug=no

    # Database variables
    local database_sys=/usr/share/endeavouros/drivers_ethernet_r8168
    local database_tmp=/tmp/drivers_ethernet_r8168.tmp

    local lspci="$(lspci -vnn)"
    local id=$(GetId)
    local driver=$(GetDriver)

    Options "$@"

    local dbline=""
    local cardinfoline=$(FindCard)

    #if [ ! -r "$database" ] ; then
    #    touch "$database" || DIE "cannot create database file $database"
    #fi

    case "$mode" in
        save)
            # It is possible that more than one driver is supported by the same id.
            if (! eos-connection-checker) ; then
                DIE "Connection failure! Will not store driver '$driver' to database. Please check your connections."
            fi
            if [ -r $database_sys ] ; then
                dbline="$(grep "^$id $driver # " "$database_sys")"
            fi
            if [ -z "$dbline" ] ; then
                if [ -r "$database_tmp" ] ; then
                    dbline="$(grep "^$id $driver # " "$database_tmp")"
                fi
                if [ -z "$dbline" ] ; then
                    echo2 "Adding driver '$driver' with id '$id' to the temporary database."
                    printf "%s %s # %s\n" "$id" "$driver" "$cardinfoline" > "$database_tmp"
                else
                    debug "user database has line: $dbline"
                    echo2 "Driver '$driver' already added to the temporary database."
                fi
                printf2 "Please run the following terminal command now:\n   %s\n" "$progname --sendlog"
            else
                echo2 "Info: driver $driver already exists in the database, nothing more to do."
                debug "system database has line:"
                debug "$dbline"
            fi
            ;;
        sendlog)
            [ -r "$database_tmp" ] || DIE "file '$database_tmp' not found, use option '--save' first."
            cat "$database_tmp" | eos-sendlog
            rm -f "$database_tmp"               # this file not needed anymore
            ;;

        display)
            [ -r $database_sys ] || DIE "database '$database' does not exist."
            dbline="$(grep -w "^$id" "$database_sys")"
            driver="$(echo "$dbline" | awk '{print $2}')"
            [ -n "$driver" ] || DIE "database does not contain a driver for '$id'"
            debug "Database has the following card info:"
            debug "$dbline"
            echo "$driver"
            ;;
        check)
            local i1=$(echo "$id" | cut -d':' -f1)
            local i2=$(echo "$id" | cut -d':' -f2)
            cat /usr/share/hwdata/pci.ids | sed -n "/^$i1 /,/^[0-9a-f]/p" | sed '$d' | grep -P "^\t$i2 "
            ;;
    esac
}

Main "$@"

