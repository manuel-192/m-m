#!/bin/bash
#
# Checks that an internet connection exists.
# Return value is 0 on success, or another number on failure.
#
# Program 'curl-exit-code-to-string' can convert the error code to a human readable message (see below).
#
# Example usage:
#    eos-connection-checker && echo connection is ON
#    eos-connection-checker || echo connection is OFF
#    eos-connection-checker || curl-exit-code-to-string $?

GetFastestMirror() {
    # This assumes eos-rankmirrors has been executed on the current list.
    # If not, then this does essentially nothing.
    grep -A10 "^# mirror [ ]*update-level" /etc/pacman.d/endeavouros-mirrorlist | grep "^# https://" | sort -k4 | head -n1 | awk '{print $2}' | sed 's|\([^$]*\)/\$.*|\1|'
}

Verbose() { [ $verbose = yes ] && "$@" ; }

Main() {
    # default values
    local timeout=8
    local verbose=no
    local waitop=connect-timeout

    local arg

    for arg in "$@" ; do
        case "$arg" in
            --timeout=* | -t=*)
                timeout=${arg#*=}               # value in seconds
                ;;
            --verbose | -v)
                verbose=yes                     # yes = show status of tested URLs
                ;;
            --max-time | --connect-timeout)
                waitop=${arg:2}                 # provide the wait operation of curl
                ;;
            *)
                ;;                              # all other parameters simply ignored
        esac
    done

    # These addresses will be used for checking the availability of internet access.
    # If you have issues with the addresses, please report this at this site:
    #     https://forum.endeavouros.com
    #
    local URLs=(
        # This should work globally.
        #https://geoip.kde.org/v1/calamares   # this doesn't seem to work anymore?

        # EndeavourOS mirrors (fastest first).

        $(GetFastestMirror)
        $(grep ^Server /etc/pacman.d/endeavouros-mirrorlist | sed 's|^Server[ ]*=[ ]*\([^$]*\)/\$.*|\1|')
    )
    local URL
    local retval

    for URL in "${URLs[@]}" ; do
        Verbose printf "%-72s: " "$URL" >&2
        /usr/bin/curl --silent --fail --$waitop $timeout "$URL" >/dev/null
        retval=$?
        if [ $retval -eq 0 ] ; then
            Verbose echo "OK" >&2
            break
        fi
        Verbose echo "FAIL" >&2
    done
    
    return $retval
}

Main "$@"
