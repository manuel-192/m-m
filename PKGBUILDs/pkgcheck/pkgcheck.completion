# bash completion for pkgcheck        -*- shell-script -*-

_pkgcheck_complete() {
    COMPREPLY=($(compgen -W "$1" -- "$cur"))
    [[ $COMPREPLY == *= ]] && compopt -o nospace
    compopt -o nosort
}

_pkgcheck_has_in_words() {
    local list="$1"
    local listitem word

    for word in "${words[@]}" ; do
        [ "$word" = "${words[0]}" ] && continue
        for listitem in $list ; do
            [ "$word" = "$listitem" ] && return 0
        done
    done
    return 1
}

_pkgcheck_() {
    local cur prev words cword split
    _init_completion -s || return

    local -r single_options="$(pc --dump-options-single) local-repo"
    _pkgcheck_has_in_words "$single_options" && return      # nothing more needed with these!

    local -r repos=$(pc --reponames)
    local -r options="$(pc --dump-options) $single_options"

    case "$prev" in
        --pkgnames) _pkgcheck_complete "" ;;
        --pkgdb) _pkgcheck_complete "" ;;
        --changelog) _pkgcheck_complete "" ;;
    esac
}

_pkgcheck_old() {
    local cur prev words cword split
    _init_completion -s || return

    local -r single_options="$(pc --dump-options-single) local-repo"
    _pkgcheck_has_in_words "$single_options" && return      # nothing more needed with these!

    local -r repos=$(pc --reponames)
    local -r options="$(pc --dump-options) $single_options"
    local askfor=()

    _pkgcheck_has_in_words "$options" || askfor+=($options $repos)

    [ ${#askfor} -gt 0 ] && _pkgcheck_complete "${askfor[*]}"
}

complete -F _pkgcheck_ pkgcheck
