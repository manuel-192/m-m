#!/bin/bash

# Implement (a limited subset of) wget with curl.

echo2()    { echo "$@" >&2 ; }
ERROR()    { echo2 "$progname: error: $1" ; }
DIE()      { ERROR "$1" ; exit 1 ; }
CurlExit() { curl-exit-code-to-string "$1" ; exit $1 ; }

SupportedOptions() {
    local lo=${LOPTS//:/}
    lo="--${lo//,/ --}"
    local so=${SOPTS//:/}
    so=$(echo "$so" | sed -E 's|([a-zA-Z])| -\1|g')
    echo "$lo$so"
    exit 0
}

Options() {
    local LOPTS="continue,directory-prefix:,output-document:,passive-ftp,quiet,show-progress,supported-options,timeout:,timestamping,user-agent:"
    local SOPTS="cP:O:qT:NU:"
    local opts
    local has_output=no
    local args="[no-wget]"
    local wget=/usr/bin/wget

    [ -x $wget ] && args=("$@")       # save args for the real wget

    opts="$(/usr/bin/getopt -o=$SOPTS --longoptions $LOPTS --name "$progname" -- "$@")" || {
        exit 1 # DIE "option handling failed! Unsupported option?"
    }

    eval set -- "$opts"

    while true ; do
        case "$1" in
            --continue         | -c)   cmd+=(--continue-at -)                          ;;
            --directory-prefix | -P)   cmd+=(--output-dir "$2"); shift; has_output=yes ;;   # ??
            --output-document  | -O)   cmd+=(--output "$2");     shift; has_output=yes ;;
            --passive-ftp)             cmd+=(--disable-epsv)                           ;;   # ??
            --quiet            | -q)   cmd+=(--silent)                                 ;;
            --show-progress)           cmd+=(--progress-bar)                           ;;
            --timeout          | -T)   cmd+=(--max-time "$2");   shift                 ;;
            --timestamping     | -N)   cmd+=(--remote-time)                            ;;
            --user-agent       | -U)   cmd+=(--user-agent "$2"); shift                 ;;
            --supported-options)       SupportedOptions                                ;;
            --)                        shift; break                                    ;;
            -*)                        if [ "$args" != "[no-wget]" ] ; then
                                           echo2 "==> $wget ${args[*]}"
                                           $wget "${args[@]}"
                                       else
                                           DIE "unsupported option '$1', want to install package wget?"
                                       fi
                                       ;;
        esac
        shift
    done
    if [ -n "$1" ] ; then
        [ "$has_output" = "no" ] && cmd+=(--remote-name-all)
        cmd+=("$@")
    fi
}

Main() {
    local progname="${##*/}"
    local cmd=(/usr/bin/curl --fail --location --progress-bar)

    Options "$@"

    echo2 "==> ${cmd[*]}"
    "${cmd[@]}" || CurlExit $?
}

Main "$@"
