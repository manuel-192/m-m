#!/bin/bash

DIE() {
    echo "$progname: error: $1" >&2
    exit 1
}

IsTextFile() {
    case "$(xdg-mime query filetype "$1" 2>/dev/null)" in
        application/x-shellscript) return 0 ;;
        text/plain) return 0 ;;
    esac
    # local info=$(file "$1")
    # case "$info" in
    #     *"ASCII text"*)    return 0 ;;
    #     *"Unicode text"*)  return 0 ;;
    #     *"UTF-8 text"*)    return 0 ;;
    #     *"symbolic link"*) IsTextFile $(echo "$info" | awk '{print $NF}') && return 0 ;;
    # esac
    return 1
}

EmacsSetup() { type emacs-session-setup &>/dev/null && emacs-session-setup --quiet; }

Main()
{
    local progname=${0##*/}
    local commands=()
    local arg ix path cmd file
    local openers=(/bin/exo-open /bin/kde-open /bin/xdg-open)
    local opener=""
    local -r emacs=emacs

    # check which of the opener apps are available
    for opener in "${openers[@]}" ; do
        [ -x $opener ] && break || opener=""
    done

    for arg in "$@" ; do
        case "$arg" in
            -*) DIE "unknown arg '$arg'" ;;
            *)
                if IsTextFile "$arg" ; then
                    commands+=($emacs "$arg")
                    EmacsSetup
                else
                    path=$(which "$arg" 2>/dev/null)
                    if [ "$path" ] && IsTextFile "$path" ; then
                        commands+=($emacs "$path")
                        EmacsSetup
                    else
                        [ "$opener" ] || DIE "general mime app for editing files not found"
                        commands+=("$opener" "$arg")
                    fi
                fi
                ;;
        esac
    done
    if [ "$commands" ] ; then
        for ((ix=0; ix < ${#commands[@]}; ix+=2)) ; do
            cmd="${commands[$ix]}"
            file="${commands[$((ix+1))]}"
            echo "$cmd '$file'" >&2
            setsid "$cmd" "$file" &>/dev/null
        done
    else
        DIE "==> nothing to open."
    fi
}

Main "$@"
