#!/bin/bash

DIE() {
    echo "$progname: error: $1" >&2
    exit 1
}

FindFiles() {
    local opt_depth="$1"
    local opt_name="$2"
    local suffix="$3"
    local folder="$4"

    fd $opt_depth $opt_name ".*$suffix" "$folder"
}

CheckHour() {
    if [ -z "$1" ] || [ "$1" -gt 23 ] || [ "$1" -lt 0 ] ; then
        DIE "value for hour ($1) must be 0..23"
    fi
}
CheckMinSec() {
    if [ -z "$1" ] || [ "$1" -gt 59 ] || [ "$1" -lt 0 ] ; then
        DIE "value for $2 ($1) must be 0..59"
    fi
}

SetTimePeriod() {
    # $val = XY, where X=integer Y=unit (s=sec,m=min,h=hour)
    local val="$1"            # e.g. 23s
    local int="${val:: -1}"   # e.g. 23

    # [ "${int//[0-9]/}" ] && DIE "the number part in '$val' is broken"

    case "${val: -1}" in
        [Hh]) val="00/$int:00:00"; CheckHour "$int" ;;
        [Mm]) val="*:00/$int:00";  CheckMinSec "$int" minute ;;
        [Ss]) val="*:*:00/$int";   CheckMinSec "$int" second ;;
        *)
            # DIE "the unit part in '$val' is broken"
            ;;
    esac
    sed -i ~/.config/systemd/user/wallpaper-changer.timer \
        -e "s|^OnCalendar=.*|OnCalendar=$val|"
    systemctl --user daemon-reload
}

Main() {
    local progname="wallpaper-changer"    # don't use: local progname="$(basename "$0")"

    while [ "$1" ] ; do
        case "$1" in
            -h | --help)
                local helpurl="https://github.com/manuel-192/m-m/blob/master/PKGBUILDs/$progname/README.md"
                xdg-open "$helpurl" &>/dev/null
                exit 0
                ;;

            -t=* | --timer=*) SetTimePeriod "${1#*=}"; exit 0 ;;
            -t | --timer)     SetTimePeriod "$2";      exit 0 ;;
            -t*)              SetTimePeriod "${1:2}";  exit 0 ;;
        esac
    done
    local log="/tmp/$progname.log"
    local RECURSE_SUBFOLDERS="no"
    local SUPPORTED_FOLDERS=(/usr/share/endeavouros/backgrounds)
    local SUPPORTED_SUFFIXES=(jpg png)
    local SEARCH_CASE_SENSITIVE="no"
    local -r myconf="$HOME/.config/$progname.conf"

    if [ -e "$myconf" ] ; then
        source "$myconf" || return 1
    else
        source "/etc/$progname.conf" || return 1
    fi

    local opt_name=""
    local opt_depth="--maxdepth 1"
    [ "$SEARCH_CASE_SENSITIVE" = "yes" ] && opt_name="--case-sensitive"
    [ "$RECURSE_SUBFOLDERS"    = "yes" ] && opt_depth=""

    local folder suffix
    local filelist=() tmp=()

    for folder in "${SUPPORTED_FOLDERS[@]}" ; do
        for suffix in "${SUPPORTED_SUFFIXES[@]}" ; do
            readarray -t tmp <<< $(FindFiles "$opt_depth" "$opt_name" "$suffix" "$folder")
            [ ${#tmp[@]} -gt 0 ] && filelist+=("${tmp[@]}")
        done
    done

    local count=${#filelist[@]}

    if [ $count -gt 0 ] ; then
        local nr=$(shuf -i 0-$((count-1)) -n1)
        local file="${filelist[$nr]}"            # $(echo "$filelist" | sed -n "${nr}p")
        if [ -r "$file" ] ; then
            echo "$(date +%Y%m%d-%H%M): $file" >> $log
            eos-wallpaper-set "$file"
        else
            DIE "wallpaper file '$file' not readable"
        fi
    else
        DIE "no wallpapers found."
    fi
}

Main "$@"
