#!/bin/bash
#
# Show packages and their versions in a repo db.

echo2()   { echo   "$@" >&2 ; }
printf2() { printf "$@" >&2 ; }

DIE() {
    local progname="$(basename "$0")"
    local msg="$1"
    echo2 "==> Error: $msg"
    echo2 "==> Usage: $progname $param1"
    exit 1
}

Main() {
    local dbpath="$1"
    local ending=".db.tar.xz"
    local param1=database-file-name

    test -n "$dbpath" || DIE "$param1 not given"

    if [ ! -r "$dbpath" ] ; then
        printf2 "==> Info: '%s' not found, trying '%s' instead.\n\n" "$dbpath" "$dbpath$ending"
        dbpath+="$ending"
        if [ ! -r "$dbpath" ] ; then
            DIE "'$dbpath' not found."
        fi
    fi

    local xx data1
    local N E V R
    local data

    # Last sed fakingly completes the package name.
    readarray -t data <<< $(tar --list --exclude */desc -f $dbpath | sed 's|/$||' | sed -E 's|(.*)|\1-any.pkg.tar.zst|')

    for xx in "${data[@]}" ; do
        data1=$(pkg-name-components NEVR "$xx")
        N=$(echo "$data1" | cut -d'|' -f1)
        E=$(echo "$data1" | cut -d'|' -f2)
        V=$(echo "$data1" | cut -d'|' -f3)
        R=$(echo "$data1" | cut -d'|' -f4)
        if [ $E -eq 0 ] ; then
            echo "$N ${V}-$R"
        else
            echo "$N ${E}:${V}-$R"
        fi
    done | column -t
}

Main "$@"
