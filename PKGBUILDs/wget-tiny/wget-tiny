#!/bin/bash

# A limited subset of wget (implemented with curl).
# Note: this is still in experimental state, since no thorough testing has been done.

echo2()    { echo "$@" >&2 ; }
ERROR()    { echo2 "$progname: error: $1" ; }
DIE()      { ERROR "$1" ; exit 1 ; }
CurlExit() {
    local ecode="$1"
    echo2 "==> '${cmd[*]}' failed:"
    if [ -x /bin/curl-exit-code-to-string ] ; then
        curl-exit-code-to-string "$ecode"
    else
        echo2 "'curl' exit code $ecode"
    fi
    exit $ecode
}

SupportedOptions() {
    local lo=${LOPTS//:/}
    lo="--${lo//,/ --}"
    local so=${SOPTS//:/}
    so=$(echo "$so" | sed -E 's|([a-zA-Z])| -\1|g')
    echo "$lo$so"
}

Usage() {
    local opts=$(printf "%s\n" $(SupportedOptions) | sed 's|^|    |')
    local pname=wget-tiny
    cat <<EOF

EXPERIMENTAL! Not yet well tested.

$pname is a limited 'wget'. It is implemented on top of 'curl'.
$pname supports only the following options of 'wget':
$opts
See also all 'wget' options: man wget
Note: in case of reinstalling 'wget', you must manually delete
      file /usr/share/man/man1/wget.1.gz first.

EOF
    [ "$1" ] && exit $1
}

Options() {
    # The only options supported here:
    local LOPTS="continue,directory-prefix:,help,man-page-del,man-page-wget,output-document:,passive-ftp,quiet,show-command"
          LOPTS+=",show-progress,supported-options,timeout:,timestamping,user-agent:"
    local SOPTS="cP:O:qT:NU:h"
    local opts
    local has_output=no

    # local args="[no-wget]"
    # [ -x $wget ] && args=("$@")       # save args for the real wget

    opts="$(LANG=C /usr/bin/getopt -o="$SOPTS" --longoptions "$LOPTS" --name "$progname" -- "$@")" || Usage 1

    eval set -- "$opts"

    while true ; do
        case "$1" in
            # wget                           # curl
            --continue         | -c)   cmd+=(--continue-at -)                          ;;
            --directory-prefix | -P)   cmd+=(--output-dir "$2"); shift; has_output=yes ;;   # ??
            --output-document  | -O)   cmd+=(--output "$2");     shift; has_output=yes ;;
            --passive-ftp)             cmd+=(--disable-epsv)                           ;;   # ??
            --quiet            | -q)   cmd+=(--silent);                                ;;
            --show-progress)           cmd+=(--progress-bar)                           ;;
            --timeout          | -T)   cmd+=(--max-time "$2");   shift                 ;;
            --timestamping     | -N)   cmd+=(--remote-time)                            ;;
            --user-agent       | -U)   cmd+=(--user-agent "$2"); shift                 ;;
            --help             | -h)   Usage 0;                                        ;;

            # extra options (not in wget)
            --show-command)      hide_command=no ;;
            --supported-options) SupportedOptions; exit 0 ;;
            --man-page-wget)     WgetManPage; exit 0 ;;
            --man-page-del)      WgetManPageDel; exit 0 ;;

            # exit condition
            --) shift; break ;;

            # -*) DIE "internal error: unsupported option '$1'" ;;    # this line is not really needed
        esac
        shift
    done
    if [ -n "$1" ] ; then
        [ "$has_output" = "no" ] && cmd+=(--remote-name-all)
        cmd+=("$@")
    fi
}

WgetManPageDel() {
    sudo rm $manpage
}

WgetManPage() {
    echo "Fetching the 'wget' man page..." >&2
    case "$SUDO_USER" in
        "") prefix="/bin/runuser -u $LOGNAME --" ;;
        *)  prefix="/bin/sudo    -u $SUDO_USER" ;;
    esac

    local tmpdir=$($prefix mktemp -d)
    pushd $tmpdir >/dev/null || return $?

    $prefix yay -G wget >/dev/null || return $?

    local pkgname pkgver pkgrel  pkgdesc url arch license depends checkdepends optdepends
    local source backup sha256sums b2sums validpgpkeys

    source wget/PKGBUILD

    local url=https://mirror.f4st.host/archlinux/extra/os/x86_64/wget-${pkgver}-${pkgrel}-x86_64.pkg.tar.zst
    local manfile pkgfile=${url##*/}

    $prefix curl --fail -Lsm 10 -o$pkgfile $url || return $?

    unset -f prepare build check package

    tar xvf $pkgfile >/dev/null

    [ -e ${manpage:1} ] || return 1
    sudo cp ${manpage:1} ${manpage%/*}/

    popd >/dev/null
    rm -rf $tmpdir
    echo "done." >&2
}

Main() {
    local progname="${0##*/}"
    local wget=/bin/wget
    local cmd=(/usr/bin/curl --fail --location   # --progress-bar
              )
    local hide_command=yes
    local -r manpage=/usr/share/man/man1/wget.1.gz

    Options "$@"

    [ $hide_command = yes ] || echo2 "==> ${cmd[*]}"
    "${cmd[@]}" || CurlExit $?
}

Main "$@"
