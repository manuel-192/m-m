#!/bin/bash

# Reflector with extensions.

WARN() {
    echo "$progname: warning: $1" >&2
}

LocalCountry() {
    /usr/bin/eos-local-countrycode --reflector-check
}

Import() {
    local file="$1"
    cat "$file" | grep -v -P "[ ]*#|^$"
}

Usage() {
    cat <<EOF
Usage: $progname [reflector-options | ${progname}-options]
where
    reflector-options           Any option supported by reflector.

    ${progname}-options
        --country-auto | -C     If the local country is recognized by reflector, automatically add it as a country option.
        --defaults-add | -D     Add the default options: -c<local-country> -c* --sort=country.
        --import=X              Import another configuration file "X" (must be compatible with any $progname options).
        --safesave              Rank mirrors as non-root and save mirrorlist to $ml.
                                Note: --safesave conflicts with --save.

If no options are given, use the default options (see option -D above).
Configuration file $conf may contain any of the above options.
EOF
}

Options() {
    local progname="$(basename "$0")"    # reflectorext
    local lcc="" arg
    local conf=/etc/$progname.conf
    local from_config_file=""
    local importsfile=""
    local imports=""
    local defaults=""
    local has_country_option=no

    [ -r $conf ] && from_config_file="$(Import $conf)"

    # default values
    lcc="$(LocalCountry)"
    [ -n "$lcc" ] && defaults="--country $lcc "
    defaults+="-c* --sort country"

    # manage reflectorext options and pass reflector options
    for arg in $from_config_file "$@" ; do
        case "$arg" in

            # "extensions" to reflector

            --country-auto | -C)
                [ -n "$lcc" ] && args+=(--country $lcc)
                ;;
            --defaults-add | -D)
                args+=($defaults)
                ;;
            --import=*)
                importsfile="${arg#*=}"
                if [ -r "$importsfile" ] ; then
                    imports="$(Import "$importsfile")"
                    args+=($imports)
                else
                    WARN "import file '$importsfile' not found."
                fi
                ;;
            --safesave)
                safesave=yes
                ;;
            --newhelp | -H)
                Usage
                exit 0
                ;;

            # "native" reflector parameters

            *)
                args+=("$arg")
                ;;
        esac
    done

    # additional option management
    for arg in "${args[@]}" ; do
        case "$arg" in
            -c* | --country | --country=*)
                has_country_option=yes
                #break
                ;;
            --save | --save=*)
                [ "$safesave" = "yes" ] && WARN "both options --save and --safesave used." >&2
                ;;
        esac
    done
    if [ "$has_country_option" = "no" ] ; then
        args+=($defaults)
    fi
}

Reflector() {
    /usr/bin/reflector "${args[@]}" | /usr/bin/grep -v "^sorting by None <function country_sort_key.<locals>.key_func at 0x"
}

Main()
{
    local args=()
    local safesave=no
    local ml=/etc/pacman.d/mirrorlist

    Options "$@"

    if [ "$safesave" = "yes" ] ; then
        local tmp="$(mktemp "$HOME"/.$progname.XXXXX)"
        Reflector > "$tmp"
        echo "Storing mirrorlist to $ml." >&2
        sudo bash -c "cp '$tmp' $ml ; chown root:root $ml ; chmod 0644 $ml"
        rm -f "$tmp"
    else
        Reflector
    fi

}

Main "$@"
