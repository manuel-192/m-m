#!/bin/bash

# Find packages using several search strings. All search strings must match.

# TODO: use getopt, see /usr/share/doc/util-linux/getopt/getopt-parse.bash

DIE() {
    echo "Error: $1" >&2
    echo "" >&2
    Usage
    exit 1
}

Cmd() {
    echo "Command: " "$@" >&2
    "$@" || DIE "'$*' failed."
}

Options() {
    local opt
    OPTIND=1
    cmd=search
    while getopts :aohiI:rR:uU: opt ; do
        case "$opt" in
            a) prog="yay --aur" ;;
            o) prog="yay --repo" ;;
            h) Usage ; exit 0 ;;
            i) cmd=install ;;
            I) cmd=Install ; extraoptions="$OPTARG" ;;
            r) cmd=remove ;;
            R) cmd=Remove ; extraoptions="$OPTARG" ;;
            u) cmd=update ;;
            U) cmd=Update ; extraoptions="$OPTARG" ;;
            :) DIE "unsupported or insufficient option '-$OPTARG'" ;;
            *) DIE "unsupported option '-$OPTARG'" ;;
        esac
    done
}

Usage() {
    local progname="$(basename "$0")"
    local description="$progname"
    
    case "$progname" in
        pf) description+=" (Packet Finder)" ;;
    esac
    cat <<EOF >&2
$description searches packages with given search string(s) (all must match).
Search is case insensitive.
By default, both official and AUR packages are searched.
Packages can also be installed, removed, and updated.

Usage: $progname [options] string(s)
       $progname [update-options]
   string(s)   Search word(s) or package name(s)
   options:
        -a     search AUR packages only
        -o     search official packages only
        -h     this help
        -i     install given package name(s)
        -IS    install given package name(s) (S: pacman's single letter options for -S)
               Note: value S=n means the same as --needed in pacman
        -r     remove given package name(s)
        -RR    remove given package name(s) (R: pacman's single letter options for -R)
   update-options:
        -u     update packages in the system (both official and AUR)
        -UU    update packages in the system (U: 'a' for AUR, 'o' for official)

Examples:
   # search using words 'pdf' and 'cups':
   $progname pdf cups
   $progname -a pdf cups
   $progname -o pdf cups

   # update system's packages:
   $progname -u
   $progname -Uo

   # install packages:
   $progname -i chromium geany
   $progname -In chromium geany    # 'n' provides pacman's '--needed'

   # remove (uninstall) packages: 
   $progname -r chromium geany
   $progname -Rsn chromium geany
EOF
}

pkgfind()
{
    local prog=yay
    local arg cmd=""
    local extraoptions=""
    local opts=""

    Options "$@"
    shift $((OPTIND-1))

    case "$cmd" in
        update|Update)
            test -z "$1" || DIE "option -u|-U does not take more parameters ($*)"
            ;;
        *)
            test -n "$1" || DIE "no search string or package name given" ;;
    esac

    case "$cmd" in
        search)
            #cmd=($prog -S)
            cmd=($prog -Ss)
            for arg in "$@" ; do
                #cmd+=(-s)
                cmd+=("$arg")
            done
            Cmd "${cmd[@]}"
            ;;
        install)
            Cmd yay -S "$@" ;;
        Install)
            # TODO: better -S options handling
            local needed=""
            case "$extraoptions" in
                *n*) needed=" --needed"
                     extraoptions="${extraoptions/n}"  # TODO: this removes only one 'n' ...
                     ;;
            esac
            case "$extraoptions" in
                --*) opts+=" $extraoptions" ;;
                *) opts+="$extraoptions" ;;
            esac
            opts+="$needed"
            Cmd yay -S$opts "$@"
            ;;
        remove)
            Cmd yay -R "$@" ;;
        Remove)
            # TODO: better -R options handling
            case "$extraoptions" in
                --*) opts+=" $extraoptions" ;;
                *) opts+="$extraoptions" ;;
            esac
            Cmd yay -R$opts "$@"
            ;;
        update)
            Cmd yay -Syu ;;
        Update)
            case "$extraoptions" in
                a) Cmd yay -Syua ;;
                o) Cmd yay --repo -Syu ;;
            esac
            ;;
    esac
    
}

pkgfind "$@"
