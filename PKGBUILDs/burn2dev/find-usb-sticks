#!/bin/bash
#
# Author: manuel (see https://forum.endeavouros.com)
#

USB_all_infos()
{
    # Usage examples:
    #     USB_all_infos PATH,SIZE,VENDOR,MODEL
    #     USB_all_infos VENDOR

    local options="$1"   # comma separated list of options for 'lsblk -o'
    local info

    case "$options" in
        [A-Z]*)
            info="$(lsblk -o $options,SUBSYSTEMS,TYPE,HOTPLUG | grep -E ':usb:|1$' | grep ' disk ')"
            options=$(echo "$options" | tr ',' '\n' | wc -l)
            ;;
        *)
            info="$(lsblk -o PATH,SIZE,VENDOR,MODEL,SUBSYSTEMS,TYPE,HOTPLUG | grep -E ':usb:|1$' | grep ' disk ')"
            options=4
            ;;
    esac
    [ "$info" ] || return 1

    case "$options" in
        "1")   info="$(echo "$info" | awk '{printf "%-10s\n", $1}')" ;;
        "2")   info="$(echo "$info" | awk '{printf "%-10s %7s\n", $1, $2}')" ;;
        "3")   info="$(echo "$info" | awk '{printf "%-10s %7s %s\n", $1, $2, $3}')" ;;
        "4"|*) info="$(echo "$info" | awk '{printf "%-10s %7s %s %s\n", $1, $2, $3, $4}')" ;;
    esac
    echo "$info"
    return 0
}

USB_info()
{
    local path="$1"
    local option="$2"  # one option, e.g. VENDOR
    USB_all_infos PATH,"$option" | grep "$path" | awk '{print $2}'
}

USB_generation()
{
    local vendor="$1"
    local lines=7        # usb-devices lines for one entry, minus one
    local speed=$(usb-devices 2>/dev/null | grep -B$lines "Driver=usb-storage" | grep -B$lines "Manufacturer=$vendor" | grep 'Spd=' | sed 's|^.*Spd=\([0-9]*\).*$|\1|')
    case "$speed" in
        480)  echo "2.0" ;;
        5000) echo "3.0" ;;
        *)    echo "[Mbps:$speed]" ;;
    esac
}

Main()
{
    local -r progname="${0##*/}"
    local -r usb_infos="$(USB_all_infos PATH)"
    local path vendor model usbgen size type hotplug
    local sep="|"

    while [ "$1" ] ; do
        case "$1" in
            --separator)   sep="$2"; shift ;;
            --separator=*) sep="${1#*=}" ;;
            -h | --help)   Usage; return 0 ;;
            *) DIE "unsupported parameter '$1'" ;;
        esac
        shift
    done

    if [ "$usb_infos" ] ; then
        for path in $usb_infos
        do
            size=$(   USB_info "$path" SIZE)
            vendor=$( USB_info "$path" VENDOR)
            model=$(  USB_info "$path" MODEL)
            type=$(   USB_info "$path" TYPE)
            hotplug=$(USB_info "$path" HOTPLUG)
            case "$hotplug" in
                1) hotplug="" ;;                  # hotplug="${sep}hotplug" ;;
                *) hotplug="${sep}non-hotplug?" ;;
            esac

            usbgen=$( USB_generation "$vendor")

            echo "$path${sep}usb-$usbgen${sep}$vendor${sep}$model${sep}$size${sep}$type$hotplug"
        done
        return 0
    else
        echo "Looks like no USB drive attached." >&2
        return 1
    fi
}

Usage() {
    cat <<EOF
Usage: $progname [options]
Options:
    -h, --help        This help.
    --separator X     Use X as a separator inside the displayed strings.
EOF
}

DIE() {
    echo "$progname: error: $1"
    Usage
    exit 1
}

Main "$@"
