#!/bin/bash

PKGNAMES=(
    ## Add names of AUR packages here.
    ## Example:
    # archlinux-appstream-data-pamac       # remove the first # on this line to really use it
)

REPONAME=""     # Mandatory. Name of the local repository.
SIGNER=""       # Optional.  Package signer gpg name; if empty, packages will not be signed.
PACKAGED_BY=""  # Optional. The person (gpg) who built the package(s).
WORKDIR=""      # Mandatory, Working directory, where the built packages exist.

# If changes are needed before or after building the package (with makepkg),
# write a function for each package that requires modifications.
# This function will be executed in the folder where the PKGBUILD file exists.
#
# The function name MUST be of form:
#   _packagename_
# i.e. a package name (in PKGNAMES) surrounded by one leading and one trailing underscore.
#
# Helper functions that are provided:
#   FuncnameToPkgname          # extracts the package name from the given function name
#   Add_before-after_func      # adds a function name to the database of the caller
#   GetPkgbuildValue           # finds the value of the given variable in the PKGBUILD file
#   PutPkgbuildValueSimple     # changes a given variable value in PKGBUILD (only non-array variables!)
#   Pushd                      # = pushd, stdout display disabled
#   Popd                       # = popd, stdout display disabled
#   echo2                      # = echo, output goes to stderr
#   printf2                    # = printf, output goes to stderr
#   DIE                        # prints and logs the given error message and exits with code 1
#   INFO                       # prints the given info message
#
# 'case...esac' alternatives that can be used:
#   --op=construct             # case will be executed before 'makepkg' in folder where the PKGBUILD exists
#   --op=destruct              # case will be executed after  'makepkg' in folder where the PKGBUILD exists
#
# Example:
#
# _archlinux-appstream-data-pamac_() {
#     case "$1" in
#         --op=construct)
#               local PKGNAME=$(FuncnameToPkgname "$FUNCNAME")    # get the package name from the current function name
#               local PKGREL=""                                   # will change the 'pkgrel' value as an example
#
#               # Make the pre-makepkg changes here!
#               echo2 "changing 'pkgrel' in PKGBUILD of $PKGNAME"
#
#               GetPkgbuildValue pkgrel PKGREL
#               ((PKGREL++))                                      # pkgrel changed here
#
#               PutPkgbuildValueSimple pkgrel "$PKGREL"           # write the changed value back to PKGBUILD
#               sed -i PKGBUILD -e "s|^pkgrel=.*|pkgrel=$PKGREL|" # alternative way to do the same!
#             ;;
#
#         --op=destruct)
#             # Make the post-makepkg changes here!
#             rm -f *.{xml,tar}.gz                                # cleanup
#             ;;
#     esac
# }
#
# Add_before_after_func _virtualbox-ext-oracle_                   # to use the new function, add it to the database
