#!/bin/bash

DIE() {
    source /etc/bash-colors.conf
    [ "$RED" ]   || local -r RED=""
    [ "$RESET" ] || local -r RESET=""
    local -r progname="${0##*/}"
    echo -e "${RED}$progname: error: $1${RESET}" >&2
    exit 1
}

MELD() { /bin/meld "$@" &> /dev/null & }

MELD2PARA() {
    # Handle two parameters.
    # With parameters XX/file and a FOLDER, compare XX/file with FOLDER/file.

    local aa="$1"
    local bb="$2"

    if [ -d "$aa" ] && [ -f "$bb" ] ; then
        [ "${bb//\//}" = "$bb" ] && bb="./$bb"      # if no dir in the file, add ./ in front
        [ "$aa" != "/" ]         && aa="${aa%/}"    # remove possible trailing slash
        aa="$aa/${bb##*/}"                          # add file name after the folder name
    elif [ -f "$aa" ] && [ -d "$bb" ] ; then
        [ "${aa//\//}" = "$aa" ] && aa="./$aa"      # if no dir in the file, add ./ in front
        [ "$bb" != "/" ]         && bb="${bb%/}"    # remove possible trailing slash
        bb="$bb/${aa##*/}"                          # add file name after the folder name
    fi

    MELD "$aa" "$bb"
}

meld() {
    # Changing meld operation:
    # - plain 'meld' means 'meld .'
    # - compare two files when one parameter is a folder

    case "$1" in
        "") MELD . ;;       # meld for the current folder in git tree
        *)
            if [ "$2" ] && [ -z "$3" ] ; then
                MELD2PARA "$1" "$2"      # 2 parameters, may have a file and a folder
            else
                MELD "$@"                # other cases
            fi
            ;;
    esac
}

meld "$@"
